.. java:import:: java.nio.file Paths

Environment
===========

.. java:package:: com.ampl
   :noindex:

.. java:type:: public class Environment extends EnvironmentBase

   This class provides access to the environment variables and provides facilities to specify where to load the underlying AMPL interpreter.

Fields
------
PATH
^^^^

.. java:field:: public static final String PATH
   :outertype: Environment

   Get the platform dependent name of the \ ``path``\  environment variable. To append a directory to current list of system paths, follow the snippet below:

   .. parsed-literal::

      Environment e = new Environment();
      String paths = e.get(Environment.PATH);
      e.put(Environment.PATH, paths + java.io.File.pathSeparatorChar + "/mynewpath");

   Note that changing the paths in this way has effect only until the underlying AMPL process is started (in the :java:ref:`AMPL` constructor).

Constructors
------------
Environment
^^^^^^^^^^^

.. java:constructor:: public Environment()
   :outertype: Environment

   Default constructor, just copies the values of the current system environment variables. Expects the AMPL binary in a directory included in the system paths list or in the default position (which is APIJARLOCATION/ampl)

Environment
^^^^^^^^^^^

.. java:constructor:: public Environment(String binDir)
   :outertype: Environment

   Permits the user to specify a custom location for the AMPL executable.

   :param binDir: Directory to search the AMPL executable in

Methods
-------
containsKey
^^^^^^^^^^^

.. java:method:: public boolean containsKey(Object key)
   :outertype: Environment

get
^^^

.. java:method:: public String get(Object key)
   :outertype: Environment

getBinDir
^^^^^^^^^

.. java:method:: public String getBinDir()
   :outertype: Environment

   Returns the directory containing the overriding AMPL executable directory.

getWorkingDir
^^^^^^^^^^^^^

.. java:method::  String getWorkingDir()
   :outertype: Environment

   Returns the path to the current working directory.

isEmpty
^^^^^^^

.. java:method:: public boolean isEmpty()
   :outertype: Environment

put
^^^

.. java:method:: public void put(String key, String value)
   :outertype: Environment

setBinDir
^^^^^^^^^

.. java:method:: public void setBinDir(String exePath)
   :outertype: Environment

   Sets the directory in which the AMPL executable is located. Does not perform any check regarding whether the AMPL executable in there is working or not.

   :param exePath: Path to the AMPL executable (without file name)

size
^^^^

.. java:method:: public int size()
   :outertype: Environment

toString
^^^^^^^^

.. java:method:: public String toString()
   :outertype: Environment

