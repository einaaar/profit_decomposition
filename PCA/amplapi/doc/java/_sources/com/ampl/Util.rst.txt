Util
====

.. java:package:: com.ampl
   :noindex:

.. java:type:: public final class Util

   The \ ``Util``\  class contains various utility methods and constants.

Fields
------
NEWLINE
^^^^^^^

.. java:field:: public static final String NEWLINE
   :outertype: Util

   The system line separator ("\n" on UNIX).

s1
^^

.. java:field:: static long s1
   :outertype: Util

t1
^^

.. java:field:: static long t1
   :outertype: Util

Methods
-------
DataFrameColumnToArray
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: static Object[] DataFrameColumnToArray(DataFrameColumn col)
   :outertype: Util

DataFrameColumnToDoubleArray
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: static double[] DataFrameColumnToDoubleArray(DataFrameColumn col)
   :outertype: Util

DataFrameColumnToStringArray
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: static String[] DataFrameColumnToStringArray(DataFrameColumn col)
   :outertype: Util

DataFrameRowToArray
^^^^^^^^^^^^^^^^^^^

.. java:method:: static Object[] DataFrameRowToArray(DataFrameRow row)
   :outertype: Util

FromStringArray
^^^^^^^^^^^^^^^

.. java:method:: static String[] FromStringArray(StringArray s)
   :outertype: Util

FromStringArray
^^^^^^^^^^^^^^^

.. java:method:: static String[] FromStringArray(StringRefArray s)
   :outertype: Util

GetVariantArray
^^^^^^^^^^^^^^^

.. java:method:: static VariantArray GetVariantArray(Object[] objects)
   :outertype: Util

GetVariantArray
^^^^^^^^^^^^^^^

.. java:method:: static VariantArray GetVariantArray(Object[] objects, int length)
   :outertype: Util

GetVariantArray
^^^^^^^^^^^^^^^

.. java:method:: static VariantArray GetVariantArray(int[] objects)
   :outertype: Util

GetVariantArray
^^^^^^^^^^^^^^^

.. java:method:: static VariantArray GetVariantArray(double[] objects)
   :outertype: Util

GetVariantArray
^^^^^^^^^^^^^^^

.. java:method:: static VariantArray GetVariantArray(String[] objects)
   :outertype: Util

IsNumber
^^^^^^^^

.. java:method:: static boolean IsNumber(Object o)
   :outertype: Util

ObjectsToDoubleArray
^^^^^^^^^^^^^^^^^^^^

.. java:method:: static double[] ObjectsToDoubleArray(Object[] objs)
   :outertype: Util

ObjectsToStringArray
^^^^^^^^^^^^^^^^^^^^

.. java:method:: static String[] ObjectsToStringArray(Object[] objs)
   :outertype: Util

ToTupleArray
^^^^^^^^^^^^

.. java:method:: static TupleArray ToTupleArray(Tuple[] tuples)
   :outertype: Util

TupleRefToObject
^^^^^^^^^^^^^^^^

.. java:method:: static Object TupleRefToObject(TupleRefBase tr)
   :outertype: Util

getClassLocation
^^^^^^^^^^^^^^^^

.. java:method:: public static java.net.URL getClassLocation(Class<?> c)
   :outertype: Util

getVariantFromObject
^^^^^^^^^^^^^^^^^^^^

.. java:method:: static Variant getVariantFromObject(Object o)
   :outertype: Util

loadLibrary
^^^^^^^^^^^

.. java:method:: public static void loadLibrary(String s)
   :outertype: Util

objectToTuple
^^^^^^^^^^^^^

.. java:method:: static Tuple objectToTuple(Object o)
   :outertype: Util

print
^^^^^

.. java:method:: static void print()
   :outertype: Util

printObjectArrayInfo
^^^^^^^^^^^^^^^^^^^^

.. java:method:: static void printObjectArrayInfo(Object o)
   :outertype: Util

printObjectInfo
^^^^^^^^^^^^^^^

.. java:method:: static void printObjectInfo(Object o)
   :outertype: Util

quote
^^^^^

.. java:method:: public static String quote(String str)
   :outertype: Util

   Converts \ ``str``\  into an AMPL/SAMPL string by surrounding it with single quotes and escaping quotes and newlines.

tic
^^^

.. java:method:: static void tic()
   :outertype: Util

tic2
^^^^

.. java:method:: static void tic2()
   :outertype: Util

tic3
^^^^

.. java:method:: static void tic3()
   :outertype: Util

toc
^^^

.. java:method:: static void toc()
   :outertype: Util

toc2
^^^^

.. java:method:: static void toc2()
   :outertype: Util

toc3
^^^^

.. java:method:: static void toc3()
   :outertype: Util

unquote
^^^^^^^

.. java:method:: public static String unquote(String str)
   :outertype: Util

   Unquotes an AMPL string. Returns the same string if it is not a valid AMPL string

variantToObject
^^^^^^^^^^^^^^^

.. java:method:: static Object variantToObject(VariantRef v)
   :outertype: Util

variantToObject
^^^^^^^^^^^^^^^

.. java:method:: static Object variantToObject(Variant v)
   :outertype: Util

